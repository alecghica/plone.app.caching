<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xml:lang="en" lang="en"
      metal:use-macro="context/prefs_main_template/macros/master"
      i18n:domain="plone.app.caching">

<body>

<div metal:fill-slot="prefs_configlet_main">

    <h1 class="documentFirstHeading"
        i18n:translate="heading_caching_Settings">Caching settings</h1>

    <a href=""
        class="link-parent"
        tal:attributes="href string:${portal_url}/plone_control_panel"
        i18n:translate="label_up_to_plone_setup">
            Up to Site Setup
    </a>

    <p i18n:translate="description_types_setup">
        Control how pages, images, style sheets and other resources are
        cached.
    </p>
    
    <form
        name="settings"
        method="post" 
        class="enableFormTabbing enableUnloadProtection"
        tal:attributes="action request/URL">
        
        <fieldset id="fieldset-global-settings">
            <legend
                id="fieldsetlegend-global-settings" 
                i18n:translate="legend_globalsettings">Global settings</legend>
            
            <div
                class="field"
                tal:define="selected python:request.get('enabled', view.settings.enabled)">
                
                <input type="hidden" value="" name="enabled:boolean:default" />
                <input type="checkbox" value="1" name="enabled:boolean" id="enabled"
                    tal:attributes="checked python:'checked' if selected else None"
                    />
                <label for="enabled" i18n:translate="label_enable">Enable caching</label>
                <div class="formHelp">
                    If this option is disabled, no caching will take place.
                </div>
                
            </div>
            
        </fieldset>
        
        <fieldset id="fieldset-mappings">
            <legend
                id="fieldsetlegend-mappings"
                i18n:translate="legend_mappings">Mappings</legend>
            
            <div class="discreet" i18n:translate="description_mappings">
                <p>
                Caching can be controlled by mapping <em>rulesets</em> to
                <em>cache interceptors</em> and <em>response mutators</em>.
                </p>
                <p>
                A <strong>ruleset</strong> is a name given to a resource
                published by Plone, such as a view. Rulesets are declared by
                the developers who write those views. You can think of them as
                a way to give hints about how something should be cached,
                without actually implementing the caching operations. The
                exact caching operations that will take place are mapped to
                rules in two different ways:
                </p>
                <p>
                A <strong>cache interceptor</strong> is a caching operation
                which can intercept the response <em>before</em>
                Plone renders a particular view. One example may be to return
                a <code>304 NOT MODIFIED</code> response. Another may be to
                return a full page that has been cached in memory, rather than
                ask Plone to render the view. Most cache interceptors will be
                conditional, i.e. they will only intercept the response in
                some cases.
                </p>
                <p>
                A <strong>response mutator</strong> is a caching operation
                that changes the response <em>after</em> Plone is finished
                with it. The most common type of response mutator is one
                which conditionally sets cache headers, instructing a
                user's web browser or a reverse caching proxy such as
                Squid or Varnish how to cache the page.
                </p>
            </div>
            
            <label i18n:translate="label_mappings">Ruleset mappings</label>
            <div class="formHelp" i18:translate="help_main_mappings">
                Use the table below to map caching rules to interceptors
                and mutators.
            </div>
            
            <table class="listing nosort" id="rulesetMappingsTable">
                <thead>
                    <tr>
                        <th i18n:translate="heading_ruleset">Ruleset</th>
                        <th i18n:translate="heading_interceptor">Interceptor</th>
                        <th i18n:translate="heading_mutator">Mutator</th>
                    </tr>
                </thead>
                <tbody>
                    <tr tal:repeat="ruleType view/ruleTypes">
                        <td>
                            <div tal:content="ruleType/title" />
                            <p class="discreet" tal:content="ruleType/description" />
                        </td>
                        <td tal:define="selected python:request.get('interceptors', view.interceptorMapping).get(ruleType.name, None)">
                            <select
                                size="1"
                                tal:attributes="id   string:interceptor-${ruleType/name};
                                                name string:interceptors.${ruleType/name}:record;">
                                <option
                                    value=""
                                    tal:attributes="selected python:'selected' if selected is None else None"
                                    i18n:translate="value_not_used"
                                    >(Not used)</option>
                                <option
                                    tal:repeat="interceptorType view/interceptorTypes"
                                    tal:attributes="value    interceptorType/name;
                                                    title    interceptorType/description;
                                                    selected python:'selected' if interceptorType['name'] == selected else None;"
                                    tal:content="interceptorType/title"
                                    />
                            </select>
                        </td>
                        <td tal:define="selected python:request.get('mutators', view.mutatorMapping).get(ruleType.name, None)">
                            <select
                                size="1"
                                tal:attributes="id   string:mutator-${ruleType/name};
                                                name string:mutators.${ruleType/name}:record;">
                                <option
                                    value=""
                                    tal:attributes="selected python:'selected' if selected is None else None"
                                    i18n:translate="value_not_used"
                                    >(Not used)</option>
                                <option
                                    tal:repeat="mutatorType view/mutatorTypes"
                                    tal:attributes="value    mutatorType/name;
                                                    title    mutatorType/description;
                                                    selected python:'selected' if mutatorType['name'] == selected else None;"
                                    tal:content="mutatorType/title"
                                    />
                            </select>
                        </td>
                    </tr>
                </tbody>
            </table>
            
            <label i18n:translate="label_template_mappings">Legacy template mappings</label>
            <div class="formHelp" i18:translate="help_template_mappings">
                Legacy page templates defined in the <em>portal_skins</em>
                tool or created or customised through the web cannot be
                associated with rulesets in the usual way. Instead, the
                association is maintained here. Enter template names (one per
                line) and/or choose content types below. If you choose a
                content type name, the corresponding caching rule will be
                associated with the default view of that content type.
                <strong>Note:</strong> You can only use each template name or
                content type once!
            </div>
            
            <table class="listing nosort" id="templateMappingsTable">
                <thead>
                    <tr>
                        <th i18n:translate="heading_ruleset">Ruleset</th>
                        <th i18n:translate="heading_content_types">Content types</th>
                        <th i18n:translate="heading_templates">Templates</th>
                    </tr>
                </thead>
                <tbody>
                    <tal:block repeat="ruleType view/ruleTypes">
                        <tr tal:define="contentTypeError python:request.get('errors', {}).get('contenttypes', {}).get(ruleType.name, None);
                                        templateError    python:request.get('errors', {}).get('templates', {}).get(ruleType.name, None);">
                            <td>
                                <div tal:content="ruleType/title" />
                                <p class="discreet" tal:content="ruleType/description" />
                                <div class="error" tal:condition="python:contentTypeError or templateError">
                                    <div tal:content="contentTypeError" tal:condition="contentTypeError" />
                                    <div tal:content="templateError" tal:condition="templateError" />
                                </div>
                            </td>
                            <td tal:define="selected python:request.get('contenttypes', view.reverseContentTypeMapping).get(ruleType.name, [])">
                                <div class="error" tal:omit-tag="not:contentTypeError">
                                    <select
                                        size="6"
                                        multiple="multiple"
                                        tal:attributes="id   string:contenttypes-${ruleType/name};
                                                        name string:contenttypes.${ruleType/name}:record:list;">
                                        <option
                                            tal:repeat="contentType view/contentTypes"
                                            tal:attributes="value    contentType/name;
                                                            title    contentType/description;
                                                            selected python:'selected' if contentType['name'] in selected else None;"
                                            tal:content="contentType/title"
                                            />
                                    </select>
                                </div>
                            </td>
                            <td tal:define="selected python:request.get('templates', view.reverseTemplateMappingAsStrings).get(ruleType.name, '')">
                                <div class="error" tal:omit-tag="not:templateError">
                                    <textarea
                                        cols="40" rows="4"
                                        tal:attributes="id   string:templates-${ruleType/name};
                                                        name string:templates.${ruleType/name}:record"
                                        tal:content="selected"
                                        ></textarea>
                                </div>
                            </td>
                        
                        </tr>
                    </tal:block>
                </tbody>
            </table>
            
        </fieldset>
        <fieldset id="fieldset-detailed-settings">
            <legend
                id="fieldsetlegend-detailed-settings" 
                i18n:translate="legend_detailedsettings">Detailed settings</legend>
            
            <div class="discreet" i18n:translate="description_detailed_settings">
                <p>
                Many caching operations accept parameters to influence their
                behaviour. For example, an interceptor which returns a page
                cached in RAM may accept a parameter specifying the timeout
                period before pages are re-calculated. Most operations,
                however, will have "sensible defaults", so that  they work
                acceptably even when no parameters have been set. Note also 
                that not all operations support parameters.
                </p>
                <p>
                Parameters can be set at two levels. By default, parameters
                apply to all uses of particular operation. Thus, if you have
                assigned an operation to more than one ruleset, the
                <em>same</em> parameters will be used. However, you can also
                override the parameters for a particular ruleset.
                </p>
                <p>
                Use the table below to access parameters for a particular
                operation or ruleset. <strong>Warning:</strong> If you have
                made changes elsewhere in this form, you should save them
                before configuring any operation parameters. Otherwise, you
                will lose your changes.
                </p>
            </div>
            
            <label i18n:translate="label_operation_parameters">Operation parameters</label>
            <div class="formHelp" i18:translate="help_operation_parameters">
                Use the table below to create, clear and edit operation
                parameters. If you clear the ruleset-specific parameters for
                a given operation, it will fall back on the global operation
                parameters. If you clear those, it will fall back on the
                defaults built into the operation itself.
            </div>
            
            <table class="listing nosort" id="operationParametersTable">
                <thead>
                    <tr>
                        <th i18n:translate="heading_ruleset">Ruleset</th>
                        <th i18n:translate="heading_interceptor">Interceptor</th>
                        <th i18n:translate="heading_mutator">Mutator</th>
                    </tr>
                </thead>
                <tbody>
                    <tr tal:repeat="ruleType view/ruleTypes">
                        <td>
                            <div tal:content="ruleType/title" />
                            <p class="discreet" tal:content="ruleType/description" />
                        </td>
                        <td tal:define="operationName python:view.interceptorMapping.get(ruleType.name, None)">
                            <tal:block condition="not:operationName" i18n:translate="help_not_mapped">
                                Not mapped
                            </tal:block>
                            <tal:block condition="operationName">
                                <tal:block
                                    define="operationInfo python:view.interceptorTypesLookup.get(operationName, None)"
                                    condition="operationInfo">
                                    <div tal:content="operationInfo/title" />
                                    <div
                                        class="discreet" 
                                        tal:condition="not:operationInfo/hasOptions"
                                        i18n:translate="help_no_options">
                                        No parameters
                                    </div>
                                    <div class="discreet rulesetParameterLink" tal:condition="operationInfo/hasOptions">
                                        <tal:block define="hasGlobalOptions python:view.hasGlobalOptions(operationInfo['type'])">
                                            <a  tal:condition="hasGlobalOptions"
                                                i18n:translate="link_view_edit_clear"
                                                href="#">View/edit/clear</a>
                                            <a  tal:condition="not:hasGlobalOptions"
                                                i18n:translate="link_create"
                                                href="#">Create</a>
                                        </tal:block>
                                        <span i18n:translate="label_global">global parameters</span>
                                    </div>
                                    <div class="discreet rulesetParameterLink"  tal:condition="operationInfo/hasOptions">
                                        <tal:block define="hasRulesetOptions python:view.hasRulesetOptions(operationInfo['type'], ruleType.name)">
                                            <a  tal:condition="hasRulesetOptions"
                                                i18n:translate="link_view_edit_clear"
                                                href="#">View/edit/clear</a>
                                            <a  tal:condition="not:hasRulesetOptions"
                                                i18n:translate="link_create"
                                                href="#">Create</a>
                                        </tal:block>
                                        <span i18:translate="label_ruleset">per-ruleset parameters</span>
                                    </div>
                                </tal:block>
                            </tal:block>
                        </td>
                        <td tal:define="operationName python:view.mutatorMapping.get(ruleType.name, None)">
                            <tal:block condition="not:operationName" i18n:translate="help_not_mapped">
                                Not mapped
                            </tal:block>
                            <tal:block condition="operationName">
                                <tal:block
                                    define="operationInfo python:view.mutatorTypesLookup.get(operationName, None)"
                                    condition="operationInfo">
                                    
                                    <div tal:content="operationInfo/title" />
                                    <div
                                        class="discreet" 
                                        tal:condition="not:operationInfo/hasOptions"
                                        i18n:translate="help_no_options">
                                        No parameters
                                    </div>
                                    <div class="discreet rulesetParameterLink" tal:condition="operationInfo/hasOptions">
                                        <tal:block define="hasGlobalOptions python:view.hasGlobalOptions(operationInfo['type'])">
                                            <a  tal:condition="hasGlobalOptions"
                                                i18n:translate="link_view_edit_clear"
                                                href="#">View/edit/clear</a>
                                            <a  tal:condition="not:hasGlobalOptions"
                                                i18n:translate="link_create"
                                                href="#">Create</a>
                                        </tal:block>
                                        <span i18n:translate="label_global">global parameters</span>
                                    </div>
                                    <div class="discreet rulesetParameterLink"  tal:condition="operationInfo/hasOptions">
                                        <tal:block define="hasRulesetOptions python:view.hasRulesetOptions(operationInfo['type'], ruleType.name)">
                                            <a  tal:condition="hasRulesetOptions"
                                                i18n:translate="link_view_edit_clear"
                                                href="#">View/edit/clear</a>
                                            <a  tal:condition="not:hasRulesetOptions"
                                                i18n:translate="link_create"
                                                href="#">Create</a>
                                        </tal:block>
                                        <span i18:translate="label_ruleset">per-ruleset parameters</span>
                                    </div>
                                </tal:block>
                            </tal:block>
                        </td>
                    </tr>
                </tbody>
            </table>
            
        </fieldset>
        
        <div class="formControls">
            <input
                type="submit"
                name="form.button.Save"
                class="context"
                value="Save"
                i18n:attributes="value">

            <input
                type="submit"
                name="form.button.Cancel"
                class="context"
                value="Cancel"
                i18n:attributes="value">
        </div>
        
    </form>
    
    
    <form name="profiles" tal:attributes="action request/URL" method="post"
        tal:define="errors request/errors | python:{}">
    
        <fieldset id="fieldset-import">
            <legend i18n:translate="legend_import">Import</legend>
    
            <label i18n:translate="label_management">Import settings</label>
    
            <p class="discreet" i18n:translate="help_profiles">
                Choose a profile below to import cache settings. Additional
                profiles may be installed by third party products.
                <strong>Warning:</strong> This may overwrite existing
                settings.
            </p>
            
            <div class="field">
                
                <div
                    class="error"
                    tal:condition="errors/profile | nothing"
                    tal:content="errors/profile"
                    />
                
                <div tal:repeat="profile view/profiles">
                
                    <input
                        type="radio"
                        name="profile"
                        tal:attributes="id string:profile-${repeat/profile/index};
                                        value profile/id"
                        />
                
                    <label
                        tal:attributes="for string:profile-${repeat/profile/index}"
                        tal:content="profile/title"
                        />
                
                    <p class="discreet" tal:content="profile/description" />
                
                </div>
            </div>
            
            <div class="field">
                <input type="hidden" name="snapshot:boolean:default" value="" />
                <input
                    type="checkbox"
                    name="snapshot:boolean"
                    id="snapshot"
                    value="1"
                    tal:attributes="checked python:'checked' if request.get('snapshot', True) else None"
                    />
                
                <label for="snapshot" i18n:translate="label_snapshot">
                    Take a snapshot of the site prior to importing new
                    setting.
                </label>
                <div class="formHelp" i18n:translate="help_snapshot">
                    This allows rollback to a previous state via the
                    <em>portal_setup</em> tool.
                </div>
            </div>
        
            <div class="formControls">
                <input
                    type="submit"
                    name="form.button.Import"
                    class="destructive"
                    value="Import"
                    i18n:attributes="value">
            </div>
            
        </fieldset>
    </form>
    
    
    
</div>

</body>
</html>
